buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath('com.google.cloud.tools:appengine-gradle-plugin:1.+')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'

group = 'com.liferay.sopapo.hotfixdata'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
	compile("org.springframework.boot:spring-boot-starter-security")
	
	testCompile('org.springframework.boot:spring-boot-starter-webflux')
	testCompile('org.springframework.boot:spring-boot-starter-data-rest')
	testCompile('org.springframework.boot:spring-boot-starter-jersey')
	testCompile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.boot:spring-boot-starter-reactor-netty')

	providedCompile('javax.servlet:javax.servlet-api:3.1.0')

	testCompile('io.projectreactor:reactor-test')
	compile('org.json:json:20180813')

	compile('com.google.appengine:appengine-api-1.0-sdk:+')
}

task buildDocker(type: Docker, dependsOn: build) {
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from bootJar
      into "${stageDir}/target"
    }
  }
}